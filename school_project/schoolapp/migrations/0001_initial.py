# Generated by Django 5.2.4 on 2025-07-29 11:21

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('schedule', models.CharField(blank=True, help_text='e.g. Mon-Wed-Fri 10:00–11:30', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schoolapp.classroom')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schoolapp.department')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citizenship', models.CharField(blank=True, max_length=32, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=9, null=True)),
                ('jshshir_code', models.CharField(blank=True, max_length=14, null=True)),
                ('last_name', models.CharField(blank=True, max_length=16, null=True)),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=16, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('uzbek', 'Oʻzbek'), ('russian', 'Rus'), ('kazakh', 'Kazakh'), ('tajik', 'Tajik'), ('kyrgyz', 'Kyrgyz'), ('turkmen', 'Turkmen'), ('boshqa', 'Boshqa')], max_length=64, null=True)),
                ('country', models.CharField(blank=True, choices=[('uzbekiston', "O'zbekiston"), ('rossiya', 'Rossiya'), ('qozogiston', "Qozog'iston"), ('tojikiston', 'Tojikiston'), ('qirgiziston', "Qirg'iziston"), ('turkmaniston', 'Turkmaniston'), ('boshqa', 'Boshqa')], max_length=64, null=True)),
                ('region', models.CharField(blank=True, choices=[('andijon', 'Andijon'), ('buxoro', 'Buxoro'), ('fargona', 'Fargʻona'), ('jizzax', 'Jizzax'), ('xorazm', 'Xorazm'), ('namangan', 'Namangan'), ('navoiy', 'Navoiy'), ('qashqadaryo', 'Qashqadaryo'), ('qoraqalpogiston', 'Qoraqalpogʻiston Respublikasi'), ('samarqand', 'Samarqand'), ('sirdaryo', 'Sirdaryo'), ('surxondaryo', 'Surxondaryo'), ('toshkent', 'Toshkent'), ('toshkent_shahri', 'Toshkent shahri')], max_length=64, null=True)),
                ('district', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('specialization', models.CharField(blank=True, max_length=128, null=True)),
                ('faculty', models.CharField(blank=True, max_length=128, null=True)),
                ('course_year', models.CharField(blank=True, max_length=32, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=64, null=True)),
                ('education_type', models.CharField(blank=True, max_length=64, null=True)),
                ('education_form', models.CharField(blank=True, max_length=64, null=True)),
                ('study_year', models.CharField(blank=True, max_length=32, null=True)),
                ('semester', models.CharField(blank=True, max_length=32, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='student_photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='schoolapp.group')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='schoolapp.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='schoolapp.student')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='teacher_photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schoolapp.department')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='tasks/')),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schoolapp.course')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_tasks', to='schoolapp.group')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individual_tasks', to='schoolapp.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='schoolapp.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='schoolapp.teacher'),
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_file', models.FileField(blank=True, null=True, upload_to='submissions/')),
                ('submitted_text', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_done', models.BooleanField(default=False)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='schoolapp.student')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='schoolapp.task')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='schoolapp.teacher')),
            ],
            options={
                'unique_together': {('task', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade_letter', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='schoolapp.enrollment')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades', to='schoolapp.teacher')),
            ],
            options={
                'unique_together': {('enrollment', 'teacher')},
            },
        ),
    ]
